# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Deploy
on:
  workflow_call:
    inputs:
      branch:
        description: "Branch to build"
        default: master
        required: true
        type: string
      stage:
        description: 'Deploy to stage'
        required: true
        default: 'dev'
        type: string
      target:
        description: "Target"
        type: string
        required: true
jobs:
  version:
    name: Get version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Set version variables
        id: version
        working-directory: ${{ inputs.target }}_package/${{ inputs.target }}
        run: |
          VERSION_CURRENT=$(python -c "from version import __version__; print(__version__)")
          echo "VERSION_CURRENT=$VERSION_CURRENT" >> $GITHUB_OUTPUT
    outputs:
      VERSION_RELEASE: ${{ steps.version.outputs.VERSION_RELEASE }}
      VERSION_NEXT: ${{ steps.version.outputs.VERSION_NEXT }}
      VERSION_CURRENT: ${{ steps.version.outputs.VERSION_CURRENT }}

  deploy:
    name: Deploy ${{ inputs.target }} ${{ needs.version.outputs.VERSION_CURRENT }}
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: read
      id-token: write
    environment: ${{ inputs.target }}/${{ inputs.stage }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Display python version
        run: |
          python --version
          pip --version

      - uses: aws-actions/setup-sam@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::1234123445:role/GithubActionsRole
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: CDK Build and Deploy
        working-directory: ${{ inputs.target }}_package/lambda
        run: |
          cdk deploy --require-approval never
